name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
  pull_request:
    branches:
      - "*"
      - "*/*"
      - "**"
env:
  PLUGIN_VERSION: 1.6.0-omp

jobs:
  build-windows-release:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "3.23.2"

      - name: Install latest conan
        run: |
          python -m pip install --upgrade pip
          pip install -v "conan==1.57.0"

      - name: Generate build files
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release .. -G "Visual Studio 16 2019"
          cmake --build . --config Release

      - name: Upload artifacts (part 1)
        uses: actions/upload-artifact@v3
        with:
          name: pawnraknet-${{ env.PLUGIN_VERSION }}-x64
          path: build/Release/pawnraknet.dll

      - name: Upload artifacts (part 2)
        uses: actions/upload-artifact@v3
        with:
          name: pawnraknet-${{ env.PLUGIN_VERSION }}-x64
          path: src/Pawn.RakNet.inc

  build-linux-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          fetch-depth: 0

      - name: Build using docker
        run: |
          cd docker
          chmod +x ./build.sh
          chmod +x ./docker-entrypoint.sh
          ./build.sh

      - name: Create artifact
        run: tar -czf pawnraknet-$PLUGIN_VERSION-linux-x64.tar.gz -C docker/build pawnraknet.so -C ../../src Pawn.RakNet.inc

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pawnraknet-${{ env.PLUGIN_VERSION }}-linux-x64
          path: pawnraknet-${{ env.PLUGIN_VERSION }}-linux-x64.tar.gz
